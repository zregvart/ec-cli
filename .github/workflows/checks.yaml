# Copyright 2022 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
name: Checks

"on":
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:

  Setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: checks-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            checks-${{ runner.os }}-go-

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Download go dependencies
        run: |
          go mod download
          go mod download -modfile tools/go.mod
          go mod download -modfile acceptance/go.mod

  Test:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: checks-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            checks-${{ runner.os }}-go-

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Test
        run: make test

      - name: Upload unit test coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage-unit.out
          flags: unit

      - name: Upload generative test coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage-generative.out
          flags: generative

      - name: Upload integration test coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage-integration.out
          flags: integration

  Acceptance:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: checks-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            checks-${{ runner.os }}-go-

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Acceptance test
        run: make acceptance

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage-acceptance.out
          flags: acceptance

  Task:
    runs-on: ubuntu-latest
    needs: Setup
    env:
      TASK_BUNDLE_REF: registry.image-registry.svc.cluster.local:5000/ec-task-bundle
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: checks-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            checks-${{ runner.os }}-go-

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Setup Tekton Test environment
        run: hack/setup-test-environment.sh

      - name: Testing ec task
        env:
          TASK_VERSION: 0.1
        run: tasks/verify-enterprise-contract/tests/run.sh
